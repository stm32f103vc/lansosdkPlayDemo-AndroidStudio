<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>
    
    
     <declare-styleable name="ColorPicker">
        <attr name="color_wheel_radius" format="dimension" />
        <attr name="color_wheel_thickness" format="dimension" />
        <attr name="color_center_radius" format="dimension" />
        <attr name="color_center_halo_radius" format="dimension"/>
        <attr name="color_pointer_radius" format="dimension" />
        <attr name="color_pointer_halo_radius" format="dimension" />
    </declare-styleable>
    
     
    <declare-styleable name="ColorBars">
        <attr name="bar_thickness" format="dimension" />
        <attr name="bar_length" format="dimension" />
        <attr name="bar_pointer_radius" format="dimension" />
        <attr name="bar_pointer_halo_radius" format="dimension" />
        <attr name="bar_orientation_horizontal" format="boolean" />
    </declare-styleable>
    
    
          <declare-styleable name="CircleButton">
	        <attr name="cb_color" format="color" />
	        <attr name="cb_pressedRingWidth" format="dimension" />
	    </declare-styleable>
    
          
      <!-- ====================CustomImageView============ -->    
          <attr name="borderRadius" format="dimension" />
		    <attr name="type">
		        <enum name="circle" value="0" />
		        <enum name="round" value="1" />
		    </attr>
    	<attr name="src" format="reference"></attr>

    <declare-styleable name="CustomImageView">
        <attr name="borderRadius" />
        <attr name="type" />
        <attr name="src" />
    </declare-styleable>
    
    <!-- =========CircleImageViewWithBorder=========== -->
     <declare-styleable name="CircleImageViewWithBorder">
        <attr name="border_width" format="dimension" />
        <attr name="border_color" format="color" />
    </declare-styleable>
    

     
        <declare-styleable name="SlidingLayer">
        <attr name="shadowDrawable" format="boolean"/>
        <attr name="shadowWidth" format="dimension"/>
        <attr name="closeOnTapEnabled" format="boolean"/>
        <attr name="openOnTapEnabled" format="boolean"/>
        <attr name="offsetWidth" format="dimension" />
        <attr name="stickTo" format="enum">
            <enum name="auto" value="0"/>
            <enum name="right" value="-1"/>
            <enum name="left" value="-2"/>
            <enum name="middle" value="-3"/>
            <enum name="top" value="-4"/>
            <enum name="bottom" value="-5"/>
        </attr>
    </declare-styleable>
    
        <declare-styleable name="CircularSeekBar">
        <attr name="progress" format="integer"></attr>
        <attr name="max" format="integer"></attr>
        <attr name="move_outside_circle" format="boolean"></attr>
        <attr name="maintain_equal_circle" format="boolean"></attr>
        <attr name="use_custom_radii" format="boolean"></attr>
        <attr name="lock_enabled" format="boolean"></attr>
        <attr name="circle_x_radius" format="float" />
        <attr name="circle_y_radius" format="float" />
        <attr name="circle_stroke_width" format="float" />
        <attr name="pointer_radius" format="float" />
        <attr name="pointer_halo_width" format="float" />
        <attr name="pointer_halo_border_width" format="float"></attr>
        <attr name="circle_color" format="string"></attr>
        <attr name="circle_progress_color" format="string"></attr>
        <attr name="pointer_color" format="string"></attr>
        <attr name="pointer_halo_color" format="string"></attr>
        <attr name="pointer_halo_color_ontouch" format="string"></attr>
        <attr name="pointer_alpha_ontouch" format="integer"></attr>
        <attr name="start_angle" format="float"></attr>
        <attr name="end_angle" format="float"></attr>
        <attr name="circle_fill" format="string"></attr>
    </declare-styleable>
    
</resources>